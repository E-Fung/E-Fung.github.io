{"version":3,"sources":["components/PokeDetails/PokeMoves.tsx","service/pokeService.ts","components/subcomponents/PokePic.tsx","utility/utility.ts","AppContext.tsx","components/subcomponents/PokeType.tsx","utility/generateIdTexture.ts","components/subcomponents/IdBackground.tsx","components/subcomponents/PokeCard.tsx","components/PokeContainer.tsx","components/PokeDetails/PokeEvol.tsx","components/PokeDetails/PokeStats.tsx","components/PokeDetails/PokeWeakness.tsx","components/PokeDetails/PokeMenu.tsx","components/PokeDetails/PokeDetails.tsx","components/Background.tsx","components/TopBar/TopBar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["PokeMove","getSinglePokeSpecies","apiUrl","axios","get","then","resp","getPokeList","listPokeData","promiseArray","i","length","push","url","Promise","all","getTypePokeList","pokemon","getListTypeInfo","listType","type","getTypeOfMove","move","PokePic","id","history","useHistory","altIndex","toString","padStart","onClick","pathname","style","maxWidth","maxHeight","cursor","src","alt","capFirstLetter","name","result","split","map","word","toUpperCase","substring","join","getPokeScheme","pokeTypes","opacity","left","matchColor","right","useAppContext","useContext","AppContext","createContext","AppContextProvider","children","useState","currType","setCurrType","Provider","value","useStyles","makeStyles","fire","backgroundColor","color","grass","bug","dark","dragon","electric","fairy","fighting","flying","ghost","ground","ice","normal","poison","psychic","rock","steel","water","bold","fontWeight","typeButton","textTransform","padding","marginLeft","marginTop","PokeType","types","classes","index","Button","startIcon","variant","className","hasOwnProperty","handleTypeClick","generateIdTexture","fontSize","fontStyle","bitmap","document","createElement","height","width","g","getContext","fillStyle","font","textWidth","measureText","scale","Array","copyAmount","fill","forEach","item","fillText","toDataURL","patternBackground","position","IdBackground","newTexture","setNewTexture","useEffect","theme","card","margin","pokeBounce","animation","transitions","easing","easeInOut","transform","general","zIndex","idBackground","boxSizing","PokeCard","pokeMainData","hover","setHover","Grow","in","Grid","xs","md","lg","Paper","elevation","clsx","onMouseEnter","onMouseLeave","background","data","container","direction","Typography","textAlign","justifyContent","PokeContainer","pokeList","setPokeList","loadButton","setLoadButton","promiseInProgress","usePromiseTracker","loadMorePokemon","loadPokemon","firstLoad","a","pokemonOffset","listBasicPoke","results","additionalPokemons","slice","p","loadPokemonType","typeUrl","filter","trackPromise","disabled","PokeEvol","pokeSpecies","evolChain","setEvolChain","getEvolChain","evolution_chain","evolData","tempEvolChain","chain","Object","assign","species","evolution_details","evolves_to","pokeStag","Fragment","alignContent","match","PokeStats","pokeStats","stat","base_stat","LinearProgress","PokeWeakness","weaknessList","setWeaknessList","superWeaknessList","setSuperWeaknessList","getTypeInfo","tempTypeInfo","tempWeaknessList","damage_relations","double_damage_from","innerType","half_damage_from","indexOf","splice","objSuperWeakList","itr","objWeaknessList","Star","CircularProgress","PokeTab","moveGrid","menuBlocks","PokeMoves","pokeMoves","pMoves","setPMoves","getTypeMove","pokeMoveType","tempPMoves","TypeButt","props","other","overflow","top","LevelUp","version_group_details","move_learn_method","sort","b","level_learned_at","Machine","localeCompare","Tutor","panel","a11yProps","PokeMenu","pokeData","React","setValue","TabPanel","role","hidden","aria-labelledby","Box","sx","borderStyle","borderRadius","borderColor","borderBottom","bgcolor","Tabs","TabIndicatorProps","onChange","event","newValue","aria-label","Tab","label","Stats","Moves","Sprites","Weakness","stats","moves","sprites","front_default","back_default","front_shiny","back_shiny","picBackground","borderBottomLeftRadius","borderBottomRightRadius","content","borderTopLeftRadius","borderTopRightRadius","evolution","PokeDetails","window","location","href","currUrl","setPokeData","setPokeSpecies","getPokemon","speciesUrl","speciesData","flavor_text_entries","entry","language","flavor_text","replace","sizing","minHeight","backgroundImage","backgroundRepeat","Background","reset","return","TopBar","toggleMenu","setToggleMenu","display","e","stopPropagation","flexDirection","boxShadow","useLocation","borderEndEndRadius","borderEndStartRadius","appbar","minWidth","App","myRange","AppBar","Toolbar","Container","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"iHASKA,E,yGCDQC,EAAuB,SAACC,GACnC,OAAOC,IAAMC,IAAIF,GAAQG,MAAK,SAACC,GAAD,OAAeA,MAelCC,EAAc,SAACC,GAE1B,IADA,IAAIC,EAAe,GACVC,EAAI,EAAGA,EAAIF,EAAaG,OAAQD,IACvCD,EAAaG,KAAKT,IAAMC,IAAII,EAAaE,GAAGG,MAE9C,OAAOC,QAAQC,IAAIN,IAORO,EAAkB,SAACR,GAE9B,IADA,IAAIC,EAAe,GACVC,EAAI,EAAGA,EAAIF,EAAaG,OAAQD,IACvCD,EAAaG,KAAKT,IAAMC,IAAII,EAAaE,GAAGO,QAAQJ,MAEtD,OAAOC,QAAQC,IAAIN,IAGRS,EAAkB,SAACC,GAE9B,IADA,IAAIV,EAAsB,GACjBC,EAAI,EAAGA,EAAIS,EAASR,OAAQD,IACnCD,EAAaG,KAAKT,IAAMC,IAAIe,EAAST,GAAGU,KAAKP,MAE/C,OAAOC,QAAQC,IAAIN,IAGRY,EAAgB,SAACF,GAE5B,IADA,IAAIV,EAAsB,GACjBC,EAAI,EAAGA,EAAIS,EAASR,OAAQD,IACnCD,EAAaG,KAAKT,IAAMC,IAAIe,EAAST,GAAGY,KAAKT,MAE/C,OAAOC,QAAQC,IAAIN,I,mECpDRc,EAA2B,SAAC,GAAY,IAAVC,EAAS,EAATA,GACnCC,EAAUC,cACZC,EAAmBH,EAAGI,WAAWC,SAAS,EAAG,KAQjD,OACE,qBACEC,QARuB,WACzBL,EAAQb,KAAK,CACXmB,SAAS,oBAAD,OAAsBP,MAO9BQ,MAAO,CAAEC,SAAU,OAAQC,UAAW,OAAQC,OAAQ,WACtDC,IAAG,kEAA6DT,EAA7D,QACHU,IAAI,aClBGC,EAAiB,SAACC,GAC7B,IAAIC,EAASD,EAeb,OAPAC,GANAA,EAASA,EACNC,MAAM,KACNC,KAAI,SAACC,GACJ,OAAOA,EAAK,GAAGC,cAAgBD,EAAKE,UAAU,MAE/CC,KAAK,MAELL,MAAM,KACNC,KAAI,SAACC,GACJ,OAAOA,EAAK,GAAGC,cAAgBD,EAAKE,UAAU,MAE/CC,KAAK,MAKGC,EAAgB,SAACC,EAA4BC,GACxD,IAAIC,EAAeC,EAAWH,EAAU,GAAG5B,KAAKmB,KAAMU,GAClDG,EAAgBJ,EAAUrC,QAAU,EAAIwC,EAAWH,EAAU,GAAG5B,KAAKmB,KAAMU,GAAWC,EAC1F,MAAM,8BAAN,OAAqCA,EAArC,aAA8CE,EAA9C,MAGWD,EAAa,SAAC/B,EAAc6B,GACvC,OAAQ7B,GACN,IAAK,OACH,MAAO,QACT,IAAK,OACH,MAAM,qBAAN,OAA4B6B,EAA5B,KACF,IAAK,QACH,MAAM,qBAAN,OAA4BA,EAA5B,KACF,IAAK,SACH,MAAM,sBAAN,OAA6BA,EAA7B,KACF,IAAK,MACH,MAAM,qBAAN,OAA4BA,EAA5B,KACF,IAAK,OACH,MAAM,oBAAN,OAA2BA,EAA3B,KACF,IAAK,SACH,MAAM,qBAAN,OAA4BA,EAA5B,KACF,IAAK,WACH,MAAM,qBAAN,OAA4BA,EAA5B,KACF,IAAK,QACH,MAAM,sBAAN,OAA6BA,EAA7B,KACF,IAAK,WACH,MAAM,oBAAN,OAA2BA,EAA3B,KACF,IAAK,SACH,MAAM,sBAAN,OAA6BA,EAA7B,KACF,IAAK,QACH,MAAM,qBAAN,OAA4BA,EAA5B,KACF,IAAK,MACH,MAAM,sBAAN,OAA6BA,EAA7B,KACF,IAAK,SACH,MAAM,sBAAN,OAA6BA,EAA7B,KACF,IAAK,SACH,MAAM,qBAAN,OAA4BA,EAA5B,KACF,IAAK,UACH,MAAM,qBAAN,OAA4BA,EAA5B,KACF,IAAK,OACH,MAAM,qBAAN,OAA4BA,EAA5B,KACF,IAAK,QACH,MAAM,sBAAN,OAA6BA,EAA7B,KACF,IAAK,QACH,MAAM,sBAAN,OAA6BA,EAA7B,KACF,QACE,MAAO,UClEAI,EAAgB,kBAAWC,qBAAWC,IAEtCA,EAAaC,wBAAc,IAE3BC,EAA+B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAC5BC,mBAAS,QADmB,mBACrDC,EADqD,KAC3CC,EAD2C,KAG5D,OAAO,cAACN,EAAWO,SAAZ,CAAqBC,MAAO,CAAEH,WAAUC,eAAxC,SAAwDH,KCD3DM,EAAYC,aAAW,iBAAO,CAClCC,KAAM,CACJC,gBAAiB,oBACjBC,MAAO,SAETC,MAAO,CACLF,gBAAiB,oBACjBC,MAAO,SAETE,IAAK,CACHH,gBAAiB,oBACjBC,MAAO,SAETG,KAAM,CACJJ,gBAAiB,mBACjBC,MAAO,SAETI,OAAQ,CACNL,gBAAiB,oBACjBC,MAAO,SAETK,SAAU,CACRN,gBAAiB,oBACjBC,MAAO,SAETM,MAAO,CACLP,gBAAiB,qBACjBC,MAAO,SAETO,SAAU,CACRR,gBAAiB,mBACjBC,MAAO,SAETQ,OAAQ,CACNT,gBAAiB,qBACjBC,MAAO,SAETS,MAAO,CACLV,gBAAiB,oBACjBC,MAAO,SAETU,OAAQ,CACNX,gBAAiB,qBACjBC,MAAO,SAETW,IAAK,CACHZ,gBAAiB,qBACjBC,MAAO,SAETY,OAAQ,CACNb,gBAAiB,qBACjBC,MAAO,SAETa,OAAQ,CACNd,gBAAiB,oBACjBC,MAAO,SAETc,QAAS,CACPf,gBAAiB,oBACjBC,MAAO,SAETe,KAAM,CACJhB,gBAAiB,oBACjBC,MAAO,SAETgB,MAAO,CACLjB,gBAAiB,qBACjBC,MAAO,SAETiB,MAAO,CACLlB,gBAAiB,qBACjBC,MAAO,SAETkB,KAAM,CACJC,WAAY,QAEdC,WAAY,CACVvD,SAAU,OACVC,UAAW,OACXuD,cAAe,OACfC,QAAS,IACTC,WAAY,MACZC,UAAW,WAIFC,EAA4B,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOpC,EAAe,EAAfA,SAC3CqC,EAAe/B,IACbH,EAAgBR,IAAhBQ,YAMR,OACE,mCACGiC,EAAMpD,KAAI,SAACtB,EAAW4E,GAAZ,OACT,cAACC,EAAA,EAAD,CACEC,UAAWxC,EACXyC,QAAQ,YAERC,UAAWhF,EAAKiF,eAAe,QAApB,UAAiCN,EAAQ3E,EAAKA,KAAKmB,MAAnD,YAA4DwD,EAAQP,YAApE,UAAsFO,EAAQ3E,GAA9F,YAAuG2E,EAAQP,YAC1H1D,QAAS,kBAZO,SAACV,GACvByC,EAAYzC,GAWSkF,CAAgBlF,EAAKiF,eAAe,QAAUjF,EAAKA,KAAKmB,KAAOnB,IALhF,SAOGkB,EAAelB,EAAKiF,eAAe,QAAUjF,EAAKA,KAAKmB,KAAOnB,IAJ1D4E,SC5GFO,EAAoB,SAAC/E,GAEhC,IAGMgF,EADsB,IADD,EAGrBC,EAAiB,eAAWD,EAAX,YAGjBE,EAASC,SAASC,cAAc,UACtCF,EAAOG,OAASH,EAAOI,MANK,IAS5B,IAAMC,EAAIL,EAAOM,WAAW,MAG5BD,EAAEE,UAAY,kBACdF,EAAEG,KAAOT,EAGT,IAAMU,EAAYJ,EAAEK,YAAY5F,GAAIsF,MACpCC,EAAEM,MAjB0B,IAiBNF,EAAW,GAUjC,OAPAG,MAAMC,GACHC,KAAK,GACLC,SAAQ,SAACC,EAAMhH,GAJW,IAACsF,IAKLtF,EALuBqG,EAAEY,SAASnG,EAAI,EAAGgF,IAAaR,EApBnD,MA4BDU,EAAOkB,UAAU,cC1BxC5D,EAAYC,aAAW,iBAAO,CAClC4D,kBAAmB,CACjBC,SAAU,WACVhB,MAAO,OACPD,OAAQ,OACRzC,MAAO,aAKE2D,EAAgC,SAAC,GAAY,IAAVvG,EAAS,EAATA,GAAS,EACnBmC,mBAAS,IADU,mBAChDqE,EADgD,KACpCC,EADoC,KAEjDlC,EAAU/B,IAMhB,OAJAkE,qBAAU,WACRD,EAAc1B,EAAkB,KAAD,OAAM/E,EAAGI,WAAWC,SAAS,EAAG,KAAhC,SAC9B,CAACL,IAEG,qBAAK4E,UAAWL,EAAQ8B,kBAAmBxF,IAAI,gBAAgBD,IAAK4F,K,gBCZvEhE,EAAYC,aAAW,SAACkE,GAAD,MAAY,CACvCC,KAAM,CACJjE,gBAAiB,QACjB2D,SAAU,WACVO,OAAQ,OAEVC,WAAY,CACVC,UAAU,iBAAD,OAAmBJ,EAAMK,YAAYC,OAAOC,YAEvD,oBAAqB,CACnB,KAAM,CACJC,UAAW,kBAEb,MAAO,CACLA,UAAW,mBAEb,OAAQ,CACNA,UAAW,mBAGfC,QAAS,CACPlD,QAAS,MACT2C,OAAQ,MACRQ,OAAQ,IAEVC,aAAc,CACZhC,MAAO,OACPiC,UAAW,aACXrD,QAAS,MACTmB,OAAQ,OACRiB,SAAU,WACVe,OAAQ,OAMCG,EAA4B,SAAC,GAAsB,IAAD,EAAnBC,EAAmB,EAAnBA,aAAmB,EACnCtF,oBAAS,GAD0B,mBACtDuF,EADsD,KAC/CC,EAD+C,KAEvDpD,EAAU/B,IAEhB,OACE,cAACoF,EAAA,EAAD,CAAMC,IAAI,EAAV,SACE,cAACC,EAAA,EAAD,CAAM5B,MAAI,EAAC6B,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA7B,SACE,cAACC,EAAA,EAAD,CACElI,GAAG,QACHmI,UAAW,EACXvD,UAAWwD,aAAI,mBACZ7D,EAAQqC,MAAO,GADH,cAEZrC,EAAQuC,WAAaY,GAFT,IAIfW,aAAc,kBAAMV,GAAS,IAC7BW,aAAc,kBAAMX,GAAS,IAR/B,SAUE,cAACG,EAAA,EAAD,CAAMtH,MAAO,CAAE+H,WAAYhH,EAAckG,EAAae,KAAKlE,MAAO,SAAlE,SACE,eAACwD,EAAA,EAAD,CAAMW,WAAS,EAACC,UAAU,SAASlI,MAAO,CAAE8E,MAAO,OAAQD,OAAQ,QAAnE,UACE,cAACyC,EAAA,EAAD,CAAMlD,UAAWL,EAAQ+C,aAAzB,SACE,cAAC,EAAD,CAActH,GAAIyH,EAAae,KAAKxI,OAEtC,cAAC8H,EAAA,EAAD,CAAM5B,MAAI,EAACtB,UAAWL,EAAQ6C,QAA9B,SACE,cAAC,EAAD,CAASpH,GAAIyH,EAAae,KAAKxI,OAEjC,cAAC8H,EAAA,EAAD,CAAMlD,UAAWL,EAAQ6C,QAAzB,SACE,cAACuB,EAAA,EAAD,CAAYhE,QAAQ,KAAKnE,MAAO,CAAEuD,WAAY,IAAK6E,UAAW,UAA9D,SACG9H,EAAe2G,EAAae,KAAKzH,UAGtC,cAAC+G,EAAA,EAAD,CAAMlD,UAAWL,EAAQ6C,QAAzB,SACE,cAACU,EAAA,EAAD,CAAMW,WAAS,EAACC,UAAU,MAAMG,eAAe,eAA/C,SACE,cAAC,EAAD,CAAUvE,MAAOmD,EAAae,KAAKlE,wB,QCrExCwE,EAA0B,WAAO,IAAD,EACX3G,mBAAS,IADE,mBACpC4G,EADoC,KAC1BC,EAD0B,OAEP7G,oBAAS,GAFF,mBAEpC8G,EAFoC,KAExBC,EAFwB,KAGnC9G,EAAaP,IAAbO,SACA+G,EAAsBC,8BAAtBD,kBAERzC,qBAAU,WAERwC,GAAc,GACdG,GAFyB,KAIxB,CAACjH,IAEJ,IAAMkH,EAAW,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,6DACgB,GAC9BC,EAAwBF,EAAY,EAAIR,EAAS5J,OACjDE,EAHc,kDACgB,GADhB,mBAGyEoK,GAHzE,SRHO/K,EQOmCW,ERNvDV,IAAMC,IAAIF,GAAQG,MAAK,SAACC,GAAD,OAAeA,KQEzB,cAId4K,EAJc,OAIgDlB,KAAKmB,QAJrD,SAKkC5K,EAAY2K,GAL9C,OAMlBE,GADIA,EALc,QAMsBC,MAAM,EArBzB,IAqByCd,EAAS5J,QAC3D6J,EAAZO,EAAwBK,EAAkC,SAACE,GAAD,4BAAWA,GAAX,YAAiBF,MAC3EA,EAAmBzK,OAAS4J,EAAS5J,QAvBhB,KAuBwC+J,GAAc,GARzD,kCRHM,IAACxK,IQGP,OAAH,sDAWXqL,EAAe,uCAAG,WAAOR,GAAP,qBAAAC,EAAA,6DAClBC,EAAwBF,EAAY,GAAKR,EAAS5J,OAAS,GAC3D6K,EAFkB,yCAEkC5H,GAFlC,SRFG1D,EQKoCsL,ERJxDrL,IAAMC,IAAIF,GAAQG,MAAK,SAACC,GAAD,OAAeA,KQCrB,cAGlB4K,EAHkB,OAGiDlB,KAAK/I,QAHtD,SAI8BD,EAAgBkK,GAJ9C,QAKtBE,GADIA,EAJkB,QAKkBK,QAAO,SAACxK,GAAD,OAAaA,EAAQ+I,KAAKxI,GAAK,QAE3Db,QAAUsK,GAAiBP,GAAc,GAC5DU,EAAqBA,EAAmBC,MAAM,EAAGJ,GACjDT,EAAYY,GATU,kCRFE,IAAClL,IQEH,OAAH,sDAYf2K,EAAkB,SAACE,GACvBW,uBAA0B,SAAb9H,EAAsBkH,EAAYC,GAAaQ,EAAgBR,KAG9E,OACE,eAACzB,EAAA,EAAD,CAAMW,WAAS,EAACI,eAAe,SAA/B,UACGE,EAAS7H,KAAI,SAACzB,EAAS+E,GACtB,OAAO,cAAC,EAAD,CAAsBiD,aAAchI,GAArB+E,MAEvByE,GACC,cAACnB,EAAA,EAAD,CAAMW,WAAS,EAACjI,MAAO,CAAE8E,MAAO,QAAUuD,eAAe,SAAzD,SACE,cAACpE,EAAA,EAAD,CAAQ0F,SAAUhB,EAAmBxE,QAAQ,YAAYrE,QAAS,kBAAM+I,GAAgB,IAAxF,6B,iBC/CGe,EAA4B,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAAkB,EAC1BlI,qBAD0B,mBACrDmI,EADqD,KAC1CC,EAD0C,KAG5D7D,qBAAU,WACR8D,MAEC,IAEH,IAAMA,EAAY,uCAAG,8BAAAhB,EAAA,sETNQ9K,ESOS2L,EAAY7B,KAAKiC,gBAAgBpL,ITNhEV,IAAMC,IAAIF,GAAQG,MAAK,SAACC,GAAD,OAAeA,KSKxB,OAMnB,IALI4L,EADe,OAEfC,EAAiC,GACrCD,EAAWA,EAASlC,KAAKoC,MAEzBD,EAAcvL,KAAKyL,OAAOC,OAAO,GAAIJ,EAASK,QAASL,EAASM,oBAC/B,MAA1BN,EAASO,WAAW,IACzBP,EAAWA,EAASO,WAAW,GAC/BN,EAAcvL,KAAKyL,OAAOC,OAAO,GAAIJ,EAASK,QAASL,EAASM,kBAAkB,KAEpFT,EAAaI,GAVM,iCTNO,IAACjM,ISMR,OAAH,qDAalB,OAAK4L,EAKH,cAACxC,EAAA,EAAD,CAAMW,WAAS,EAACI,eAAe,SAASrI,MAAO,CAAE6E,OAAQ,QAAzD,SACGiF,EAAUpJ,KAAI,SAACgK,EAAe1G,GAAhB,OACb,eAAC,IAAM2G,SAAP,WACE,cAACrD,EAAA,EAAD,CAAM5B,MAAI,EAAC6B,GAAI,EAAGvH,MAAO,CAAE0D,QAAS,EAAGmB,OAAQ,QAA/C,SACE,cAACyC,EAAA,EAAD,CAAMW,WAAS,EAACI,eAAe,SAASuC,aAAa,SAAS5K,MAAO,CAAE6E,OAAQ,OAAQC,MAAO,QAA9F,SACE,cAAC,EAAD,CAAStF,GAAIkL,EAAS7L,IAAIwK,OAAO,GAAGwB,MAAM,UAAU/J,KAAK,UAG5DkD,EAAQ8F,EAAUnL,OAAS,GAC1B,cAAC2I,EAAA,EAAD,CAAM5B,MAAI,EAAC6B,GAAI,EAAf,SACE,cAACD,EAAA,EAAD,CAAMW,WAAS,EAACI,eAAe,SAASuC,aAAa,SAAS5K,MAAO,CAAE6E,OAAQ,QAA/E,SACE,cAAC,IAAD,UATab,QANlB,8B,qDCzBE8G,GAA6B,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAC3C,OACE,cAACzD,EAAA,EAAD,CAAMW,WAAS,EAACI,eAAe,SAA/B,SACG0C,EAAUrK,KAAI,SAACsK,EAAsBhH,GAAvB,OACb,eAACsD,EAAA,EAAD,CAAMW,WAAS,EAAf,UACE,cAACX,EAAA,EAAD,UACE,cAACa,EAAA,EAAD,CAAYnI,MAAO,CAAEoC,MAAO,SAA5B,SAAwC4I,EAAKC,cAE/C,cAAC3D,EAAA,EAAD,CAAMtH,MAAO,CAAE2D,WAAY,QAA3B,SACE,cAACwE,EAAA,EAAD,CAAYnI,MAAO,CAAEoC,MAAO,SAA5B,SAAwC9B,EAAe0K,EAAKA,KAAKzK,UAEnE,cAAC2K,GAAA,EAAD,CAAgB/G,QAAQ,cAAcpC,MAAOiJ,EAAKC,UAAY,IAAKjL,MAAO,CAAE8E,MAAO,YAPhEd,S,oBCFhBmH,GAAgC,SAAC,GAAmB,IAAjBnK,EAAgB,EAAhBA,UAAgB,EACtBW,qBADsB,mBACvDyJ,EADuD,KACzCC,EADyC,OAEZ1J,qBAFY,mBAEvD2J,EAFuD,KAEpCC,EAFoC,KAI9DrF,qBAAU,WACRsF,MAEC,IAEH,IAAMA,EAAW,uCAAG,oCAAAxC,EAAA,sEACO9J,EAAgB8B,GADvB,OACdyK,EADc,OAEdC,EAA6B,GACjCD,EAAahG,SAAQ,SAACrG,GAEpBA,EAAK4I,KAAK2D,iBAAiBC,mBAAmBnG,SAAQ,SAACoG,GACrDH,EAAiB9M,KAAKiN,EAAUtL,YAGpCkL,EAAahG,SAAQ,SAACrG,GAEpBA,EAAK4I,KAAK2D,iBAAiBG,iBAAiBrG,SAAQ,SAACoG,GACnD,IAAI7H,EAAQ0H,EAAiBK,QAAQF,EAAUtL,MAC3CyD,GAAS,GACX0H,EAAiBM,OAAOhI,EAAO,SAKjCsH,EAA8BI,EAAiBjC,QAAO,SAACrK,EAAM4E,GAAP,OAAiB0H,EAAiBK,QAAQ3M,KAAU4E,KAC9G0H,EAAmBA,EAAiBjC,QAAO,SAACrK,EAAM4E,GAAP,OAAsD,IAArCsH,EAAkBS,QAAQ3M,MAElF6M,EAAoCX,EAAkB5K,KAAI,SAACwL,GAAD,MAAU,CAAE9M,KAAM,CAAEmB,KAAM2L,OACpFC,EAAmCT,EAAiBhL,KAAI,SAACwL,GAAD,MAAU,CAAE9M,KAAM,CAAEmB,KAAM2L,OACtFb,EAAgBc,GAChBZ,EAAqBU,GAzBH,4CAAH,qDA4BjB,OAAKb,GAAiBE,EAKpB,qCACE,cAAC,EAAD,CAAUxH,MAAOwH,EAAjB,SACE,cAACc,GAAA,EAAD,MAEF,cAAC,EAAD,CAAUtI,MAAOsH,OARZ,cAACiB,GAAA,EAAD,M,SZtCNrO,K,kBAAAA,E,mBAAAA,E,eAAAA,M,KAML,IaPKsO,GbOCtK,GAAYC,aAAW,iBAAO,CAClCsK,SAAU,CACRzH,MAAO,OACPpB,QAAS,OAEX8I,WAAY,CACV3H,OAAQ,OACR1C,gBAAiB,SAEnBD,KAAM,CACJC,gBAAiB,oBACjBC,MAAO,SAETC,MAAO,CACLF,gBAAiB,oBACjBC,MAAO,SAETE,IAAK,CACHH,gBAAiB,oBACjBC,MAAO,SAETG,KAAM,CACJJ,gBAAiB,mBACjBC,MAAO,SAETI,OAAQ,CACNL,gBAAiB,oBACjBC,MAAO,SAETK,SAAU,CACRN,gBAAiB,oBACjBC,MAAO,SAETM,MAAO,CACLP,gBAAiB,qBACjBC,MAAO,SAETO,SAAU,CACRR,gBAAiB,mBACjBC,MAAO,SAETQ,OAAQ,CACNT,gBAAiB,qBACjBC,MAAO,SAETS,MAAO,CACLV,gBAAiB,oBACjBC,MAAO,SAETU,OAAQ,CACNX,gBAAiB,qBACjBC,MAAO,SAETW,IAAK,CACHZ,gBAAiB,qBACjBC,MAAO,SAETY,OAAQ,CACNb,gBAAiB,qBACjBC,MAAO,SAETa,OAAQ,CACNd,gBAAiB,oBACjBC,MAAO,SAETc,QAAS,CACPf,gBAAiB,oBACjBC,MAAO,SAETe,KAAM,CACJhB,gBAAiB,oBACjBC,MAAO,SAETgB,MAAO,CACLjB,gBAAiB,qBACjBC,MAAO,SAETiB,MAAO,CACLlB,gBAAiB,qBACjBC,MAAO,SAETkB,KAAM,CACJC,WAAY,QAEdC,WAAY,CACVvD,SAAU,OACVC,UAAW,OACXuD,cAAe,OACf4C,OAAQ,WAQCoG,GAA6B,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAAgB,EAC/B/K,qBAD+B,mBACpDgL,EADoD,KAC5CC,EAD4C,KAErD7I,EAAe/B,KACrBkE,qBAAU,WACR2G,MAEC,CAACH,IAEJ,IAAMG,EAAW,uCAAG,8BAAA7D,EAAA,sEACO3J,EAAcqN,GADrB,OACdI,EADc,OAEdC,EAAaD,EAAapM,KAAI,SAACgF,EAAMhH,GAAP,OAAa2L,OAAOC,OAAO,GAAI5E,EAAMgH,EAAUhO,OACjFkO,EAAUG,GAHQ,2CAAH,qDAMjB,SAASC,EAASC,GACqBA,EAA7BvL,SAD2B,IACjBtC,EAAmB6N,EAAnB7N,KAAS8N,EADO,YACGD,EADH,qBAElC,OACE,cAAChJ,EAAA,EAAD,yBAAQE,QAAQ,aAAgB+I,GAAhC,IAAuC9I,UAAS,UAAKL,EAAQ3E,GAAb,YAAsB2E,EAAQP,YAA9E,SACGlD,EAAelB,MAKtB,OAAKuN,EAKH,eAACrF,EAAA,EAAD,CAAMW,WAAS,EAACjI,MAAO,CAAEmN,SAAU,OAAQtI,OAAQ,QAAnD,UACE,eAACyC,EAAA,EAAD,CAAMW,WAAS,EAAf,UACE,cAACX,EAAA,EAAD,CACEW,WAAS,EACTI,eAAe,gBACfjE,UAAS,UAAKL,EAAQwI,SAAb,YAAyBxI,EAAQyI,YAC1CxM,MAAO,CAAE6G,OAAQ,IAAKf,SAAU,SAAUsH,IAAK,OAJjD,SAME,cAACjF,EAAA,EAAD,CAAYhE,QAAQ,KAApB,SAA0B7D,EAAetC,EAASqP,aAEnDV,EACElD,QAAO,SAACnK,EAAqB0E,GAAtB,OAAwC1E,EAAKgO,sBAAsB,GAAGC,kBAAkBhN,OAASvC,EAASqP,WACjHG,MAAK,SAACxE,EAAGyE,GAAJ,OAAWzE,EAAEsE,sBAAsB,GAAGI,iBAAmBD,EAAEH,sBAAsB,GAAGI,iBAAmB,GAAK,KACjHhN,KAAI,SAACpB,EAAqB0E,GAAtB,OACH,eAACsD,EAAA,EAAD,CAAkBW,WAAS,EAACI,eAAe,gBAAgBjE,UAAWL,EAAQwI,SAA9E,UACE,cAACjF,EAAA,EAAD,CAAM5B,MAAI,EAAC6B,GAAI,EAAGvH,MAAO,CAAE6E,OAAQ,QAAnC,SACE,cAACyC,EAAA,EAAD,CAAMW,WAAS,EAACjI,MAAO,CAAE6E,OAAQ,QAAU+F,aAAa,SAAxD,SACE,cAACzC,EAAA,EAAD,UAAa7I,EAAKgO,sBAAsB,GAAGI,uBAG/C,cAACpG,EAAA,EAAD,CAAM5B,MAAI,EAAC6B,GAAI,EAAGvH,MAAO,CAAE6E,OAAQ,QAAnC,SACE,cAACyC,EAAA,EAAD,CAAMW,WAAS,EAACjI,MAAO,CAAE6E,OAAQ,QAAU+F,aAAa,SAAxD,SACE,cAACzC,EAAA,EAAD,CAAYnI,MAAO,CAAEoI,UAAW,UAAhC,SAA6C9H,EAAehB,EAAKA,KAAKiB,YAG1E,cAAC+G,EAAA,EAAD,CAAM5B,MAAI,EAAC6B,GAAI,EAAf,SACE,cAACyF,EAAD,CAAU5N,KAAME,EAAK0I,KAAK5I,KAAKmB,WAZxByD,MAgBf,cAACsD,EAAA,EAAD,CAAMW,WAAS,EAAC7D,UAAWL,EAAQyI,gBAErC,eAAClF,EAAA,EAAD,CAAMW,WAAS,EAAf,UACE,cAACX,EAAA,EAAD,CACEW,WAAS,EACTI,eAAe,gBACfjE,UAAS,UAAKL,EAAQwI,SAAb,YAAyBxI,EAAQyI,YAC1CxM,MAAO,CAAE6G,OAAQ,IAAKf,SAAU,SAAUsH,IAAK,OAJjD,SAME,cAACjF,EAAA,EAAD,CAAYhE,QAAQ,KAApB,SAA0B7D,EAAetC,EAAS2P,aAEnDhB,EACElD,QAAO,SAACnK,EAAqB0E,GAAtB,OAAwC1E,EAAKgO,sBAAsB,GAAGC,kBAAkBhN,OAASvC,EAAS2P,WACjHH,MAAK,SAACxE,EAAGyE,GAAJ,OAAUzE,EAAE1J,KAAKiB,KAAKqN,cAAcH,EAAEnO,KAAKiB,SAChDG,KAAI,SAACpB,EAAqB0E,GAAtB,OACH,eAACsD,EAAA,EAAD,CAAkBW,WAAS,EAACI,eAAe,gBAAgBjE,UAAWL,EAAQwI,SAA9E,UACE,cAACjF,EAAA,EAAD,CAAM5B,MAAI,EAAC6B,GAAI,EAAGvH,MAAO,CAAE6E,OAAQ,QAAnC,SACE,cAACyC,EAAA,EAAD,CAAMW,WAAS,EAACjI,MAAO,CAAE6E,OAAQ,QAAU+F,aAAa,aAE1D,cAACtD,EAAA,EAAD,CAAM5B,MAAI,EAAC6B,GAAI,EAAGvH,MAAO,CAAE6E,OAAQ,QAAnC,SACE,cAACyC,EAAA,EAAD,CAAMW,WAAS,EAACjI,MAAO,CAAE6E,OAAQ,QAAU+F,aAAa,SAAxD,SACE,cAACzC,EAAA,EAAD,UAAa7H,EAAehB,EAAKA,KAAKiB,YAG1C,cAAC+G,EAAA,EAAD,CAAM5B,MAAI,EAAC6B,GAAI,EAAf,SACE,cAACyF,EAAD,CAAU5N,KAAME,EAAK0I,KAAK5I,KAAKmB,WAVxByD,MAcf,cAACsD,EAAA,EAAD,CAAMW,WAAS,EAAC7D,UAAWL,EAAQyI,gBAErC,eAAClF,EAAA,EAAD,CAAMW,WAAS,EAAf,UACE,cAACX,EAAA,EAAD,CACEW,WAAS,EACTI,eAAe,gBACfjE,UAAS,UAAKL,EAAQwI,SAAb,YAAyBxI,EAAQyI,YAC1CxM,MAAO,CAAE6G,OAAQ,IAAKf,SAAU,SAAUsH,IAAK,OAJjD,SAME,cAACjF,EAAA,EAAD,CAAYhE,QAAQ,KAApB,SAA0B7D,EAAetC,EAAS6P,WAEnDlB,EACElD,QAAO,SAACnK,EAAqB0E,GAAtB,OAAwC1E,EAAKgO,sBAAsB,GAAGC,kBAAkBhN,OAASvC,EAAS6P,SACjHL,MAAK,SAACxE,EAAGyE,GAAJ,OAAUzE,EAAE1J,KAAKiB,KAAKqN,cAAcH,EAAEnO,KAAKiB,SAChDG,KAAI,SAACpB,EAAqB0E,GAAtB,OACH,eAACsD,EAAA,EAAD,CAAkBW,WAAS,EAACI,eAAe,gBAAgBjE,UAAWL,EAAQwI,SAA9E,UACE,cAACjF,EAAA,EAAD,CAAM5B,MAAI,EAAC6B,GAAI,EAAGvH,MAAO,CAAE6E,OAAQ,QAAnC,SACE,cAACyC,EAAA,EAAD,CAAMW,WAAS,EAACjI,MAAO,CAAE6E,OAAQ,QAAU+F,aAAa,aAE1D,cAACtD,EAAA,EAAD,CAAM5B,MAAI,EAAC6B,GAAI,EAAGvH,MAAO,CAAE6E,OAAQ,QAAnC,SACE,cAACyC,EAAA,EAAD,CAAMW,WAAS,EAACjI,MAAO,CAAE6E,OAAQ,QAAU+F,aAAa,SAAxD,SACE,cAACzC,EAAA,EAAD,UAAa7H,EAAehB,EAAKA,KAAKiB,YAG1C,cAAC+G,EAAA,EAAD,CAAM5B,MAAI,EAAC6B,GAAI,EAAf,SACE,cAACyF,EAAD,CAAU5N,KAAME,EAAK0I,KAAK5I,KAAKmB,WAVxByD,SAejB,cAACsD,EAAA,EAAD,CAAMW,WAAS,EAAC7D,UAAWL,EAAQyI,WAAYxM,MAAO,CAAE6E,OAAQ,YA7F3D,cAACwH,GAAA,EAAD,M,Sa/HNC,K,mBAAAA,E,cAAAA,E,kBAAAA,E,oBAAAA,Q,KAYL,IAAMtK,GAAYC,aAAW,iBAAO,CAClC6L,MAAO,CAELpK,QAAS,MACTmB,OAAQ,aAMZ,SAASkJ,GAAU/J,GACjB,MAAO,CACLxE,GAAG,cAAD,OAAgBwE,GAClB,gBAAgB,mBAAhB,OAAoCA,IAIjC,IAAMgK,GAA4B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAC/BC,WAAe,GADgB,mBAClDnM,EADkD,KAC3CoM,EAD2C,KAEnDpK,EAAU/B,KAEhB,SAASoM,EAASnB,GAAuB,IAC/BvL,EAAqCuL,EAArCvL,SAAUK,EAA2BkL,EAA3BlL,MAAOiC,EAAoBiJ,EAApBjJ,MAAUkJ,EADG,YACOD,EADP,8BAEtC,OACE,6CAAKoB,KAAK,WAAWC,OAAQvM,IAAUiC,EAAOxE,GAAE,0BAAqBwE,GAASuK,kBAAA,qBAA+BvK,IAAakJ,GAA1H,aACGnL,IAAUiC,GACT,cAACsD,EAAA,EAAD,CAAMW,WAAS,EAACI,eAAe,SAASuC,aAAa,SAASxG,UAAWL,EAAQ+J,MAAjF,SACGpM,OAWX,OACE,eAAC8M,EAAA,EAAD,CAAKC,GAAI,CAAE3J,MAAO,OAAS9E,MAAO,CAAEmC,gBAAiB,QAASuM,YAAa,QAASC,aAAc,OAAQC,YAAa,QAAvH,UACE,cAACJ,EAAA,EAAD,CAAKC,GAAI,CAAEI,aAAc,EAAGD,YAAa,WAAaE,QAAS3N,EAAW8M,EAASjG,KAAKlE,MAAM,GAAG1E,KAAKmB,KAAM,OAA5G,SACE,eAACwO,EAAA,EAAD,CAAM5K,QAAQ,YAAY6K,kBAAmB,CAAEhP,MAAO,CAAEmC,gBAAiB,UAAaJ,MAAOA,EAAOkN,SAPrF,SAACC,EAA8BC,GAClDhB,EAASgB,IAMuHC,aAAW,YAAvI,UACE,cAACC,EAAA,EAAD,aAAKC,MAAOhD,GAAQiD,OAAWxB,GAAU,KACzC,cAACsB,EAAA,EAAD,aAAKC,MAAOhD,GAAQkD,OAAWzB,GAAU,KACzC,cAACsB,EAAA,EAAD,aAAKC,MAAOhD,GAAQmD,SAAa1B,GAAU,KAC3C,cAACsB,EAAA,EAAD,aAAKC,MAAOhD,GAAQoD,UAAc3B,GAAU,UAGhD,cAACK,EAAD,CAAUrM,MAAOA,EAAOiC,MAAO,EAA/B,SACE,cAAC,GAAD,CAAW+G,UAAWkD,EAASjG,KAAK2H,UAEtC,cAACvB,EAAD,CAAUrM,MAAOA,EAAOiC,MAAO,EAA/B,SACE,cAAC,GAAD,CAAW0I,UAAWuB,EAASjG,KAAK4H,UAEtC,cAACxB,EAAD,CAAUrM,MAAOA,EAAOiC,MAAO,EAA/B,SACE,eAACsD,EAAA,EAAD,CAAMW,WAAS,EAACI,eAAe,SAA/B,UACE,cAACf,EAAA,EAAD,CAAM5B,MAAI,EAAC6B,GAAI,EAAf,SACE,qBAAKvH,MAAO,CAAE8E,MAAO,QAAU1E,IAAK6N,EAASjG,KAAK6H,QAAQC,cAAezP,IAAI,oBAE/E,cAACiH,EAAA,EAAD,CAAM5B,MAAI,EAAC6B,GAAI,EAAf,SACE,qBAAKvH,MAAO,CAAE8E,MAAO,QAAU1E,IAAK6N,EAASjG,KAAK6H,QAAQE,aAAc1P,IAAI,mBAE9E,cAACiH,EAAA,EAAD,CAAM5B,MAAI,EAAC6B,GAAI,EAAf,SACE,qBAAKvH,MAAO,CAAE8E,MAAO,QAAU1E,IAAK6N,EAASjG,KAAK6H,QAAQG,YAAa3P,IAAI,kBAE7E,cAACiH,EAAA,EAAD,CAAM5B,MAAI,EAAC6B,GAAI,EAAf,SACE,qBAAKvH,MAAO,CAAE8E,MAAO,QAAU1E,IAAK6N,EAASjG,KAAK6H,QAAQI,WAAY5P,IAAI,sBAIhF,cAAC+N,EAAD,CAAUrM,MAAOA,EAAOiC,MAAO,EAA/B,SACE,cAACsD,EAAA,EAAD,CAAMW,WAAS,EAACI,eAAe,SAA/B,SACE,cAAC,GAAD,CAAcrH,UAAWiN,EAASjG,KAAKlE,gBC9E3C9B,GAAYC,aAAW,iBAAO,CAClCiO,cAAe,CACbrL,OAAQ,OACRsL,uBAAwB,KACxBC,wBAAyB,MAE3BC,QAAS,CACPvL,MAAO,OACPwL,oBAAqB,KACrBC,qBAAsB,KACtBtP,QAAS,IACTkB,gBAAiB,QACjBuB,QAAS,OACTkH,aAAc,IAEhB4F,UAAW,CACT3L,OAAQ,OACRC,MAAO,OACP3C,gBAAiB,aAIRsO,GAAwB,WAAO,IAAD,EACvB9O,mBAAS+O,OAAOC,SAASC,MAApCC,EADkC,sBAETlP,qBAFS,mBAElCsM,EAFkC,KAExB6C,EAFwB,OAGHnP,qBAHG,mBAGlCkI,EAHkC,KAGrBkH,EAHqB,KAIrCvR,GAAcqR,EAAQxH,OAAO,GAAGwB,MAAM,UAAW/J,KAAK,IACpDiD,EAAU/B,KAEhBkE,qBAAU,WACR8K,MAEC,IAEH,IAAMA,EAAU,uCAAG,kCAAAhI,EAAA,6DACbnK,EADa,4CACsCW,GADtC,Sb5CStB,Ea8CwBW,Eb7C7CV,IAAMC,IAAIF,GAAQG,MAAK,SAACC,GAAD,OAAeA,Ka2C1B,cAEb0J,EAFa,OAGjB8I,EAAY9I,GACRiJ,EAAqBjJ,EAAKA,KAAKuC,QAAQ1L,IAJ1B,SAKyBZ,EAAqBgT,GAL9C,OAKbC,EALa,OAMjBH,EAAeG,GANE,kCb5CQ,IAAChT,Ia4CT,OAAH,qDAShB,OAAK+P,GAAapE,EAKhB,eAACvC,EAAA,EAAD,CAAMtH,MAAO,CAAE+H,WAAYhH,EAAckN,EAASjG,KAAKlE,MAAO,QAA9D,UACE,cAACwD,EAAA,EAAD,CAAMW,WAAS,EAACI,eAAe,SAASjE,UAAWL,EAAQmM,cAA3D,SACE,cAAC,EAAD,CAAS1Q,GAAIA,MAEf,eAAC8H,EAAA,EAAD,CAAMe,eAAe,SAASJ,WAAS,EAAC7D,UAAWL,EAAQsM,QAA3D,UACE,cAAC/I,EAAA,EAAD,CAAM5B,MAAI,EAAC6B,GAAI,GAAf,SACE,cAACY,EAAA,EAAD,CAAYhE,QAAQ,KAAKnE,MAAO,CAAEoI,UAAW,SAAU7E,WAAY,QAAnE,SACGjD,EAAe2N,EAASjG,KAAKzH,UAGlC,cAAC+G,EAAA,EAAD,CAAM5B,MAAI,EAAV,SACE,cAAC4B,EAAA,EAAD,CAAMW,WAAS,EAACC,UAAU,MAAMG,eAAe,eAA/C,SACE,cAAC,EAAD,CAAUvE,MAAOmK,EAASjG,KAAKlE,YAGnC,cAACwD,EAAA,EAAD,CAAM5B,MAAI,EAAC6B,GAAI,GAAf,SACE,cAACY,EAAA,EAAD,CAAYnI,MAAO,CAAEoI,UAAW,UAAhC,SACGyB,EAAY7B,KAAKmJ,oBAAoB1H,QAAO,SAAC2H,GAAD,MAAmC,OAAxBA,EAAMC,SAAS9Q,QAAe,GAAG+Q,YAAYC,QAAQ,KAAM,SAGvH,cAACjK,EAAA,EAAD,CAAM5B,MAAI,EAAC6B,GAAI,GAAf,SACE,cAACD,EAAA,EAAD,CAAMW,WAAS,EAACI,eAAe,SAASrI,MAAO,CAAEE,UAAW,OAAQD,SAAU,QAA9E,SACE,cAAC,GAAD,CAAUgO,SAAUA,WAI1B,cAAC3G,EAAA,EAAD,CAAMW,WAAS,EAAC7D,UAAWL,EAAQyM,UAAnC,SACE,cAAC,EAAD,CAAU3G,YAAaA,SA/BpB,8B,uCCrDL7H,GAAYC,aAAW,iBAAO,CAClCuP,OAAQ,CACN3M,OAAQ,OACR4M,UAAW,QACX3M,MAAO,OACPgB,SAAU,WACVsH,IAAK,IACLlM,KAAM,IACN2F,QAAS,GAEXkB,WAAY,CACV2J,gBACE,0jBACFC,iBAAkB,cAITC,GAAuB,WAAO,IACjChQ,EAAaP,IAAbO,SACFmC,EAAU/B,KAChB,OACE,cAACsF,EAAA,EAAD,CACElD,UAAWL,EAAQyN,OACnBxR,MAAO,CACLmC,gBAAiBhB,EAAWS,EAAU,SAH1C,SAME,cAAC0F,EAAA,EAAD,CAAMlD,UAAS,UAAKL,EAAQyN,OAAb,YAAuBzN,EAAQgE,iB,wCCxB9C/F,GAAYC,aAAW,iBAAO,CAClC4P,MAAO,CACLzP,MAAO,QACPD,gBAAiB,OAEnB2P,OAAQ,CACN1P,MAAO,QACPD,gBAAiB,OACjBkE,OAAQ,cAINvC,GAAQ,CACZ,OACA,QACA,MACA,OACA,SACA,WACA,QACA,WACA,SACA,QACA,SACA,MACA,SACA,SACA,UACA,OACA,QACA,SAGWiO,GAAmB,WAAO,IAAD,EACF1Q,IAA1BQ,EAD4B,EAC5BA,YAAaD,EADe,EACfA,SADe,EAEAD,oBAAS,GAFT,mBAE7BqQ,EAF6B,KAEjBC,EAFiB,KAG9BlO,EAAU/B,KACVvC,EAAUC,cAYhB,OACE,eAAC4H,EAAA,EAAD,CAAMW,WAAS,EAACI,eAAe,gBAA/B,UACE,eAACpE,EAAA,EAAD,CAAQnE,QAAS,kBAAMmS,GAAeD,IAAahS,MAAO,CAAE2D,WAAY,QAAxE,WACIqO,GAAc,cAAC,KAAD,CAAUhS,MAAO,CAAEoC,MAAO,WACzC4P,GAAc,cAAC,KAAD,CAAWhS,MAAO,CAAEoC,MAAO,cAE3C4P,GACC,cAAC1K,EAAA,EAAD,CAAMW,WAAS,EAACnI,QAAS,kBAAMmS,GAAc,IAAQjS,MAAO,CAAE8F,SAAU,WAAYoM,QAAS,OAAQhR,KAAM,OAAQkM,IAAK,QAAxH,SACE,cAACoB,EAAA,EAAD,CACE1O,QAAS,SAACqS,GACRA,EAAEC,mBAEJpS,MAAO,CACLkS,QAAS,OACTG,cAAe,SACflQ,gBAAiB,iBACjBuB,QAAS,OACTiL,aAAc,MACd2D,UAAW,gCAVf,SAaE,cAAC,EAAD,CAAUxO,MAAOA,SAIvB,eAAC0K,EAAA,EAAD,WACE,cAACpH,EAAA,EAAD,CAAMC,GAAiB,SAAbzF,EAAV,SACE,cAACqC,EAAA,EAAD,CAAQnE,QAAS,WApCvB+B,EAAY,SAoC4BuC,UAAWL,EAAQ8N,MAArD,qBAIF,cAACzK,EAAA,EAAD,CAAMC,GAA+B,eAA3BkL,cAAcxS,SAAxB,SACE,cAACkE,EAAA,EAAD,CAAQnE,QAAS,WArCvBL,EAAQb,KAAK,CACXmB,SAAS,gBAoC8BqE,UAAWL,EAAQ+N,OAAtD,6BChFJ9P,GAAYC,aAAW,iBAAO,CAClCgG,UAAW,CACT9F,gBAAiB,iBACjBuB,QAAS,OACT8O,mBAAoB,OACpBC,qBAAsB,QAExBC,OAAQ,CACNC,SAAU,OACV9N,OAAQ,WAkCG+N,OA9Bf,WAGE,IAFA,IAAM7O,EAAU/B,KACZ6Q,EAAoB,GACfnU,EAAI,EAAGA,GAAK,IAAKA,IACxBmU,EAAQjU,KAAKF,GAEf,OACE,qBAAK0F,UAAU,MAAMpE,MAAO,CAAE6E,OAAQ,QAAtC,SACE,cAAC,EAAD,UACE,eAAC,KAAD,WACE,cAACiO,GAAA,EAAD,CAAQhN,SAAS,SAAjB,SACE,cAACiN,GAAA,EAAD,CAAS/S,MAAO,CAAE0D,QAAS,KAA3B,SACE,cAAC,GAAD,QAGJ,eAAC4D,EAAA,EAAD,CAAMtH,MAAO,CAAE8F,SAAU,YAAzB,UACE,eAACkN,GAAA,EAAD,CAAW5O,UAAWL,EAAQkE,UAAWhI,SAAS,KAAKD,MAAO,CAAEmC,gBAAiB,iBAAkB0C,OAAQ,QAA3G,UACE,cAAC,IAAD,CAAOoO,KAAM,aAAcC,OAAK,EAACC,UAAW7K,IAC3CuK,EAAQnS,KAAI,SAAClB,GAAD,OACX,cAAC,IAAD,CAAOyT,KAAI,2BAAsBzT,GAAe2T,UAAW1C,IAAfjR,SAGhD,cAAC,GAAD,eC9BG4T,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBjV,MAAK,YAAkD,IAA/CkV,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFnP,SAASoP,eAAe,SAM1BX,M","file":"static/js/main.b73371cc.chunk.js","sourcesContent":["import { Grid, Typography, makeStyles, Button } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { capFirstLetter } from '../../utility/utility';\r\nimport { PokeMoveModel } from '../../model/pokeModels';\r\nimport { getTypeOfMove } from '../../service/pokeService';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\ntype Props = { pokeMoves: PokeMoveModel[] };\r\n\r\nenum PokeMove {\r\n  Machine = 'machine',\r\n  LevelUp = 'level-up',\r\n  Tutor = 'tutor',\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  moveGrid: {\r\n    width: '100%',\r\n    padding: '5px',\r\n  },\r\n  menuBlocks: {\r\n    height: '35px',\r\n    backgroundColor: 'white',\r\n  },\r\n  fire: {\r\n    backgroundColor: 'rgb(240, 128, 48)',\r\n    color: 'white',\r\n  },\r\n  grass: {\r\n    backgroundColor: 'rgb(120, 200, 80)',\r\n    color: 'black',\r\n  },\r\n  bug: {\r\n    backgroundColor: 'rgb(168, 184, 32)',\r\n    color: 'white',\r\n  },\r\n  dark: {\r\n    backgroundColor: 'rgb(112, 88, 72)',\r\n    color: 'white',\r\n  },\r\n  dragon: {\r\n    backgroundColor: 'rgb(112, 56, 248)',\r\n    color: 'white',\r\n  },\r\n  electric: {\r\n    backgroundColor: 'rgb(248, 208, 48)',\r\n    color: 'black',\r\n  },\r\n  fairy: {\r\n    backgroundColor: 'rgb(238, 153, 172)',\r\n    color: 'white',\r\n  },\r\n  fighting: {\r\n    backgroundColor: 'rgb(192, 48, 40)',\r\n    color: 'white',\r\n  },\r\n  flying: {\r\n    backgroundColor: 'rgb(168, 144, 240)',\r\n    color: 'white',\r\n  },\r\n  ghost: {\r\n    backgroundColor: 'rgb(112, 88, 152)',\r\n    color: 'white',\r\n  },\r\n  ground: {\r\n    backgroundColor: 'rgb(224, 192, 104)',\r\n    color: 'black',\r\n  },\r\n  ice: {\r\n    backgroundColor: 'rgb(152, 216, 216)',\r\n    color: 'black',\r\n  },\r\n  normal: {\r\n    backgroundColor: 'rgb(168, 168, 120)',\r\n    color: 'white',\r\n  },\r\n  poison: {\r\n    backgroundColor: 'rgb(160, 64, 160)',\r\n    color: 'white',\r\n  },\r\n  psychic: {\r\n    backgroundColor: 'rgb(248, 88, 136)',\r\n    color: 'white',\r\n  },\r\n  rock: {\r\n    backgroundColor: 'rgb(184, 160, 56)',\r\n    color: 'white',\r\n  },\r\n  steel: {\r\n    backgroundColor: 'rgb(184, 184, 208)',\r\n    color: 'black',\r\n  },\r\n  water: {\r\n    backgroundColor: 'rgb(104, 144, 240)',\r\n    color: 'white',\r\n  },\r\n  bold: {\r\n    fontWeight: 'bold',\r\n  },\r\n  typeButton: {\r\n    maxWidth: '80px',\r\n    maxHeight: '20px',\r\n    textTransform: 'none',\r\n    margin: '5px',\r\n  },\r\n}));\r\ninterface TypeProps {\r\n  children?: React.ReactNode;\r\n  type: string;\r\n}\r\n\r\nexport const PokeMoves: React.FC<Props> = ({ pokeMoves }) => {\r\n  const [pMoves, setPMoves] = useState<PokeMoveModel[]>();\r\n  const classes: any = useStyles();\r\n  useEffect(() => {\r\n    getTypeMove();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [pokeMoves]);\r\n\r\n  const getTypeMove = async () => {\r\n    let pokeMoveType = await getTypeOfMove(pokeMoves);\r\n    let tempPMoves = pokeMoveType.map((item, i) => Object.assign({}, item, pokeMoves[i]));\r\n    setPMoves(tempPMoves);\r\n  };\r\n\r\n  function TypeButt(props: TypeProps) {\r\n    const { children, type, ...other } = props;\r\n    return (\r\n      <Button variant=\"contained\" {...other} className={`${classes[type]} ${classes.typeButton}`}>\r\n        {capFirstLetter(type)}\r\n      </Button>\r\n    );\r\n  }\r\n\r\n  if (!pMoves) {\r\n    return <CircularProgress />;\r\n  }\r\n\r\n  return (\r\n    <Grid container style={{ overflow: 'auto', height: '100%' }}>\r\n      <Grid container>\r\n        <Grid\r\n          container\r\n          justifyContent=\"space-between\"\r\n          className={`${classes.moveGrid} ${classes.menuBlocks}`}\r\n          style={{ zIndex: 100, position: 'sticky', top: '0px' }}\r\n        >\r\n          <Typography variant=\"h5\">{capFirstLetter(PokeMove.LevelUp)}</Typography>\r\n        </Grid>\r\n        {pMoves\r\n          .filter((move: PokeMoveModel, index: number) => move.version_group_details[0].move_learn_method.name === PokeMove.LevelUp)\r\n          .sort((a, b) => (a.version_group_details[0].level_learned_at > b.version_group_details[0].level_learned_at ? 1 : -1))\r\n          .map((move: PokeMoveModel, index: number) => (\r\n            <Grid key={index} container justifyContent=\"space-between\" className={classes.moveGrid}>\r\n              <Grid item xs={2} style={{ height: '100%' }}>\r\n                <Grid container style={{ height: '100%' }} alignContent=\"center\">\r\n                  <Typography>{move.version_group_details[0].level_learned_at}</Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={6} style={{ height: '100%' }}>\r\n                <Grid container style={{ height: '100%' }} alignContent=\"center\">\r\n                  <Typography style={{ textAlign: 'center' }}>{capFirstLetter(move.move.name)}</Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <TypeButt type={move.data.type.name} />\r\n              </Grid>\r\n            </Grid>\r\n          ))}\r\n        <Grid container className={classes.menuBlocks}></Grid>\r\n      </Grid>\r\n      <Grid container>\r\n        <Grid\r\n          container\r\n          justifyContent=\"space-between\"\r\n          className={`${classes.moveGrid} ${classes.menuBlocks}`}\r\n          style={{ zIndex: 200, position: 'sticky', top: '0px' }}\r\n        >\r\n          <Typography variant=\"h5\">{capFirstLetter(PokeMove.Machine)}</Typography>\r\n        </Grid>\r\n        {pMoves\r\n          .filter((move: PokeMoveModel, index: number) => move.version_group_details[0].move_learn_method.name === PokeMove.Machine)\r\n          .sort((a, b) => a.move.name.localeCompare(b.move.name))\r\n          .map((move: PokeMoveModel, index: number) => (\r\n            <Grid key={index} container justifyContent=\"space-between\" className={classes.moveGrid}>\r\n              <Grid item xs={2} style={{ height: '100%' }}>\r\n                <Grid container style={{ height: '100%' }} alignContent=\"center\"></Grid>\r\n              </Grid>\r\n              <Grid item xs={6} style={{ height: '100%' }}>\r\n                <Grid container style={{ height: '100%' }} alignContent=\"center\">\r\n                  <Typography>{capFirstLetter(move.move.name)}</Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <TypeButt type={move.data.type.name} />\r\n              </Grid>\r\n            </Grid>\r\n          ))}\r\n        <Grid container className={classes.menuBlocks}></Grid>\r\n      </Grid>\r\n      <Grid container>\r\n        <Grid\r\n          container\r\n          justifyContent=\"space-between\"\r\n          className={`${classes.moveGrid} ${classes.menuBlocks}`}\r\n          style={{ zIndex: 300, position: 'sticky', top: '0px' }}\r\n        >\r\n          <Typography variant=\"h5\">{capFirstLetter(PokeMove.Tutor)}</Typography>\r\n        </Grid>\r\n        {pMoves\r\n          .filter((move: PokeMoveModel, index: number) => move.version_group_details[0].move_learn_method.name === PokeMove.Tutor)\r\n          .sort((a, b) => a.move.name.localeCompare(b.move.name))\r\n          .map((move: PokeMoveModel, index: number) => (\r\n            <Grid key={index} container justifyContent=\"space-between\" className={classes.moveGrid}>\r\n              <Grid item xs={2} style={{ height: '100%' }}>\r\n                <Grid container style={{ height: '100%' }} alignContent=\"center\"></Grid>\r\n              </Grid>\r\n              <Grid item xs={6} style={{ height: '100%' }}>\r\n                <Grid container style={{ height: '100%' }} alignContent=\"center\">\r\n                  <Typography>{capFirstLetter(move.move.name)}</Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <TypeButt type={move.data.type.name} />\r\n              </Grid>\r\n            </Grid>\r\n          ))}\r\n      </Grid>\r\n      <Grid container className={classes.menuBlocks} style={{ height: '60%' }} />\r\n    </Grid>\r\n  );\r\n};\r\n","import axios from 'axios';\r\nimport { PokeAPIReturnModel, PokeNameUrlModel, PokeMainDataModel, TypeSpecificAPIReturnModel, TypeSpecificModel, PokeMoveModel } from '../model/pokeModels';\r\nimport { PokeSpeciesModel } from '../model/pokeSpecies';\r\n\r\nexport const getSinglePoke = (apiUrl: string): Promise<PokeMainDataModel> => {\r\n  return axios.get(apiUrl).then((resp: any) => resp);\r\n};\r\n\r\nexport const getSinglePokeSpecies = (apiUrl: string): Promise<PokeSpeciesModel> => {\r\n  return axios.get(apiUrl).then((resp: any) => resp);\r\n};\r\n\r\nexport const getApiEvolData = (apiUrl: string) => {\r\n  return axios.get(apiUrl).then((resp: any) => resp);\r\n};\r\n\r\nexport const getApiEvolUrl = (apiUrl: string) => {\r\n  return axios.get(apiUrl).then((resp: any) => resp);\r\n};\r\n\r\nexport const getBasicPoke = (apiUrl: string): Promise<PokeAPIReturnModel> => {\r\n  return axios.get(apiUrl).then((resp: any) => resp);\r\n};\r\n\r\nexport const getPokeList = (listPokeData: PokeNameUrlModel[]): Promise<PokeMainDataModel[]> => {\r\n  let promiseArray = [];\r\n  for (let i = 0; i < listPokeData.length; i++) {\r\n    promiseArray.push(axios.get(listPokeData[i].url));\r\n  }\r\n  return Promise.all(promiseArray);\r\n};\r\n\r\nexport const getBasicType = (apiUrl: string): Promise<TypeSpecificAPIReturnModel> => {\r\n  return axios.get(apiUrl).then((resp: any) => resp);\r\n};\r\n\r\nexport const getTypePokeList = (listPokeData: TypeSpecificModel[]): Promise<PokeMainDataModel[]> => {\r\n  let promiseArray = [];\r\n  for (let i = 0; i < listPokeData.length; i++) {\r\n    promiseArray.push(axios.get(listPokeData[i].pokemon.url));\r\n  }\r\n  return Promise.all(promiseArray);\r\n};\r\n\r\nexport const getListTypeInfo = (listType: any[]): Promise<any[]> => {\r\n  let promiseArray: any[] = [];\r\n  for (let i = 0; i < listType.length; i++) {\r\n    promiseArray.push(axios.get(listType[i].type.url));\r\n  }\r\n  return Promise.all(promiseArray);\r\n};\r\n\r\nexport const getTypeOfMove = (listType: PokeMoveModel[]): Promise<any[]> => {\r\n  let promiseArray: any[] = [];\r\n  for (let i = 0; i < listType.length; i++) {\r\n    promiseArray.push(axios.get(listType[i].move.url));\r\n  }\r\n  return Promise.all(promiseArray);\r\n};\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router';\r\n\r\ntype Props = { id: number };\r\n\r\nexport const PokePic: React.FC<Props> = ({ id }) => {\r\n  const history = useHistory();\r\n  let altIndex: string = id.toString().padStart(3, '0');\r\n\r\n  const handlePokePicClick = (): void => {\r\n    history.push({\r\n      pathname: `/Pokemon/Details/${id}`,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <img\r\n      onClick={handlePokePicClick}\r\n      style={{ maxWidth: '100%', maxHeight: '100%', cursor: 'pointer' }}\r\n      src={`https://assets.pokemon.com/assets/cms2/img/pokedex/full/${altIndex}.png`}\r\n      alt=\"Pokemon\"\r\n    ></img>\r\n  );\r\n};\r\n","import { PokeTypeModel } from '../model/pokeModels';\r\n\r\nexport const capFirstLetter = (name: string): string => {\r\n  let result = name;\r\n\r\n  result = result\r\n    .split(' ')\r\n    .map((word) => {\r\n      return word[0].toUpperCase() + word.substring(1);\r\n    })\r\n    .join(' ');\r\n  result = result\r\n    .split('-')\r\n    .map((word) => {\r\n      return word[0].toUpperCase() + word.substring(1);\r\n    })\r\n    .join('-');\r\n\r\n  return result;\r\n};\r\n\r\nexport const getPokeScheme = (pokeTypes: PokeTypeModel[], opacity: string): string => {\r\n  let left: string = matchColor(pokeTypes[0].type.name, opacity);\r\n  let right: string = pokeTypes.length >= 2 ? matchColor(pokeTypes[1].type.name, opacity) : left;\r\n  return `linear-gradient( to right, ${left}, ${right})`;\r\n};\r\n\r\nexport const matchColor = (type: string, opacity: string): string => {\r\n  switch (type) {\r\n    case 'none':\r\n      return 'white';\r\n    case 'fire':\r\n      return `rgb(240, 128, 48, ${opacity})`;\r\n    case 'grass':\r\n      return `rgb(120, 200, 80, ${opacity})`;\r\n    case 'ground':\r\n      return `rgb(224, 192, 104, ${opacity})`;\r\n    case 'bug':\r\n      return `rgb(168, 184, 32, ${opacity})`;\r\n    case 'dark':\r\n      return `rgb(112, 88, 72, ${opacity})`;\r\n    case 'dragon':\r\n      return `rgb(112, 56, 248, ${opacity})`;\r\n    case 'electric':\r\n      return `rgb(248, 208, 48, ${opacity})`;\r\n    case 'fairy':\r\n      return `rgb(238, 153, 172, ${opacity})`;\r\n    case 'fighting':\r\n      return `rgb(192, 48, 40, ${opacity})`;\r\n    case 'flying':\r\n      return `rgb(168, 144, 240, ${opacity})`;\r\n    case 'ghost':\r\n      return `rgb(112, 88, 152, ${opacity})`;\r\n    case 'ice':\r\n      return `rgb(152, 216, 216, ${opacity})`;\r\n    case 'normal':\r\n      return `rgb(168, 168, 120, ${opacity})`;\r\n    case 'poison':\r\n      return `rgb(160, 64, 160, ${opacity})`;\r\n    case 'psychic':\r\n      return `rgb(248, 88, 136, ${opacity})`;\r\n    case 'rock':\r\n      return `rgb(184, 160, 56, ${opacity})`;\r\n    case 'steel':\r\n      return `rgb(184, 184, 208, ${opacity})`;\r\n    case 'water':\r\n      return `rgb(104, 144, 240, ${opacity})`;\r\n    default:\r\n      return 'white';\r\n  }\r\n};\r\n","import React, { useState, createContext, useContext } from 'react';\r\n\r\nexport const useAppContext = (): any => useContext(AppContext);\r\n\r\nexport const AppContext = createContext({});\r\n\r\nexport const AppContextProvider: React.FC = ({ children }) => {\r\n  const [currType, setCurrType] = useState('none');\r\n\r\n  return <AppContext.Provider value={{ currType, setCurrType }}>{children}</AppContext.Provider>;\r\n};\r\n","import React from 'react';\r\nimport { Grid, Button, makeStyles } from '@material-ui/core';\r\nimport { PokeTypeModel } from '../../model/pokeModels';\r\nimport { capFirstLetter } from '../../utility/utility';\r\nimport { useAppContext } from '../../AppContext';\r\n\r\ntype Props = { types: any };\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  fire: {\r\n    backgroundColor: 'rgb(240, 128, 48)',\r\n    color: 'white',\r\n  },\r\n  grass: {\r\n    backgroundColor: 'rgb(120, 200, 80)',\r\n    color: 'black',\r\n  },\r\n  bug: {\r\n    backgroundColor: 'rgb(168, 184, 32)',\r\n    color: 'white',\r\n  },\r\n  dark: {\r\n    backgroundColor: 'rgb(112, 88, 72)',\r\n    color: 'white',\r\n  },\r\n  dragon: {\r\n    backgroundColor: 'rgb(112, 56, 248)',\r\n    color: 'white',\r\n  },\r\n  electric: {\r\n    backgroundColor: 'rgb(248, 208, 48)',\r\n    color: 'black',\r\n  },\r\n  fairy: {\r\n    backgroundColor: 'rgb(238, 153, 172)',\r\n    color: 'white',\r\n  },\r\n  fighting: {\r\n    backgroundColor: 'rgb(192, 48, 40)',\r\n    color: 'white',\r\n  },\r\n  flying: {\r\n    backgroundColor: 'rgb(168, 144, 240)',\r\n    color: 'white',\r\n  },\r\n  ghost: {\r\n    backgroundColor: 'rgb(112, 88, 152)',\r\n    color: 'white',\r\n  },\r\n  ground: {\r\n    backgroundColor: 'rgb(224, 192, 104)',\r\n    color: 'black',\r\n  },\r\n  ice: {\r\n    backgroundColor: 'rgb(152, 216, 216)',\r\n    color: 'black',\r\n  },\r\n  normal: {\r\n    backgroundColor: 'rgb(168, 168, 120)',\r\n    color: 'white',\r\n  },\r\n  poison: {\r\n    backgroundColor: 'rgb(160, 64, 160)',\r\n    color: 'white',\r\n  },\r\n  psychic: {\r\n    backgroundColor: 'rgb(248, 88, 136)',\r\n    color: 'white',\r\n  },\r\n  rock: {\r\n    backgroundColor: 'rgb(184, 160, 56)',\r\n    color: 'white',\r\n  },\r\n  steel: {\r\n    backgroundColor: 'rgb(184, 184, 208)',\r\n    color: 'black',\r\n  },\r\n  water: {\r\n    backgroundColor: 'rgb(104, 144, 240)',\r\n    color: 'white',\r\n  },\r\n  bold: {\r\n    fontWeight: 'bold',\r\n  },\r\n  typeButton: {\r\n    maxWidth: '80px',\r\n    maxHeight: '20px',\r\n    textTransform: 'none',\r\n    padding: '0',\r\n    marginLeft: '4px',\r\n    marginTop: '4px',\r\n  },\r\n}));\r\n\r\nexport const PokeType: React.FC<Props> = ({ types, children }) => {\r\n  const classes: any = useStyles();\r\n  const { setCurrType } = useAppContext();\r\n\r\n  const handleTypeClick = (type: string): void => {\r\n    setCurrType(type);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {types.map((type: any, index: number) => (\r\n        <Button\r\n          startIcon={children}\r\n          variant=\"contained\"\r\n          key={index}\r\n          className={type.hasOwnProperty('type') ? `${classes[type.type.name]} ${classes.typeButton}` : `${classes[type]} ${classes.typeButton}`}\r\n          onClick={() => handleTypeClick(type.hasOwnProperty('type') ? type.type.name : type)}\r\n        >\r\n          {capFirstLetter(type.hasOwnProperty('type') ? type.type.name : type)}\r\n        </Button>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n","export const generateIdTexture = (id: string): string => {\r\n  // Set variables\r\n  const bitmapShift: number = 0;\r\n  const copyAmount: number = 6;\r\n  const canvasWidth: number = 200; //size of each picture which will then be repeated\r\n  const fontSize: number = canvasWidth / copyAmount;\r\n  const fontStyle: string = `Bold ${fontSize}px Arial`;\r\n\r\n  // Create canvas\r\n  const bitmap = document.createElement('canvas');\r\n  bitmap.height = bitmap.width = canvasWidth;\r\n\r\n  // Create 2d context\r\n  const g = bitmap.getContext('2d')!;\r\n\r\n  // Add font style again\r\n  g.fillStyle = 'rgb(0,0,0,0.06)';\r\n  g.font = fontStyle;\r\n\r\n  // Add text on the canvas\r\n  const textWidth = g.measureText(id).width;\r\n  g.scale(canvasWidth / textWidth, 1);\r\n  const fillAndDuplicateText = (index: number) => g.fillText(id, 0, fontSize * ++index - bitmapShift);\r\n\r\n  Array(copyAmount + 1)\r\n    .fill(0)\r\n    .forEach((item, i) => {\r\n      fillAndDuplicateText(i);\r\n    });\r\n\r\n  const background: string = bitmap.toDataURL('image/png');\r\n  return background;\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { generateIdTexture } from '../../utility/generateIdTexture';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  patternBackground: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: '100%',\r\n    color: 'black',\r\n  },\r\n}));\r\n\r\ntype Props = { id: number };\r\nexport const IdBackground: React.FC<Props> = ({ id }) => {\r\n  const [newTexture, setNewTexture] = useState('' as string);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    setNewTexture(generateIdTexture(` #${id.toString().padStart(3, '0')} `));\r\n  }, [id]);\r\n\r\n  return <img className={classes.patternBackground} alt=\"ID Background\" src={newTexture}></img>;\r\n};\r\n","import { Grid, Typography, Paper, makeStyles } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport { PokeMainDataModel } from '../../model/pokeModels';\r\nimport { PokePic } from './PokePic';\r\nimport { getPokeScheme, capFirstLetter } from '../../utility/utility';\r\nimport { PokeType } from './PokeType';\r\nimport { IdBackground } from './IdBackground';\r\nimport { Grow } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    backgroundColor: 'white',\r\n    position: 'relative',\r\n    margin: '8px',\r\n  },\r\n  pokeBounce: {\r\n    animation: `$bounce 300ms ${theme.transitions.easing.easeInOut}`,\r\n  },\r\n  '@keyframes bounce': {\r\n    '0%': {\r\n      transform: 'translateY(0%)',\r\n    },\r\n    '50%': {\r\n      transform: 'translateY(-1%)',\r\n    },\r\n    '100%': {\r\n      transform: 'translateY(0%)',\r\n    },\r\n  },\r\n  general: {\r\n    padding: '5px',\r\n    margin: '2px',\r\n    zIndex: 10,\r\n  },\r\n  idBackground: {\r\n    width: '100%',\r\n    boxSizing: 'border-box',\r\n    padding: '5px',\r\n    height: '100%',\r\n    position: 'absolute',\r\n    zIndex: 5,\r\n  },\r\n}));\r\n\r\ntype Props = { pokeMainData: PokeMainDataModel };\r\n\r\nexport const PokeCard: React.FC<Props> = ({ pokeMainData }) => {\r\n  const [hover, setHover] = useState(false as boolean);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grow in={true}>\r\n      <Grid item xs={6} md={4} lg={3}>\r\n        <Paper\r\n          id=\"paper\"\r\n          elevation={2}\r\n          className={clsx({\r\n            [classes.card]: true,\r\n            [classes.pokeBounce]: hover,\r\n          })}\r\n          onMouseEnter={() => setHover(true)}\r\n          onMouseLeave={() => setHover(false)}\r\n        >\r\n          <Grid style={{ background: getPokeScheme(pokeMainData.data.types, '0.35') }}>\r\n            <Grid container direction=\"column\" style={{ width: '100%', height: '100%' }}>\r\n              <Grid className={classes.idBackground}>\r\n                <IdBackground id={pokeMainData.data.id} />\r\n              </Grid>\r\n              <Grid item className={classes.general}>\r\n                <PokePic id={pokeMainData.data.id} />\r\n              </Grid>\r\n              <Grid className={classes.general}>\r\n                <Typography variant=\"h5\" style={{ fontWeight: 500, textAlign: 'center' }}>\r\n                  {capFirstLetter(pokeMainData.data.name)}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid className={classes.general}>\r\n                <Grid container direction=\"row\" justifyContent=\"space-around\">\r\n                  <PokeType types={pokeMainData.data.types} />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n    </Grow>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { getPokeList, getBasicPoke, getBasicType, getTypePokeList } from '../service/pokeService';\r\nimport { PokeNameUrlModel, PokeMainDataModel, TypeSpecificModel } from '../model/pokeModels';\r\nimport { Button, Grid } from '@material-ui/core';\r\nimport { PokeCard } from './subcomponents/PokeCard';\r\nimport { useAppContext } from '../AppContext';\r\nimport { usePromiseTracker, trackPromise } from 'react-promise-tracker';\r\n\r\nlet maxPokemon: number = 898;\r\n\r\nexport const PokeContainer: React.FC = () => {\r\n  const [pokeList, setPokeList] = useState([] as PokeMainDataModel[]);\r\n  const [loadButton, setLoadButton] = useState(true as boolean);\r\n  const { currType } = useAppContext();\r\n  const { promiseInProgress } = usePromiseTracker();\r\n\r\n  useEffect(() => {\r\n    let firstLoad: boolean = true;\r\n    setLoadButton(true);\r\n    loadMorePokemon(firstLoad);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currType]);\r\n\r\n  const loadPokemon = async (firstLoad: boolean): Promise<void> => {\r\n    let totalPokemonPerLoad: number = 20;\r\n    let pokemonOffset: number = firstLoad ? 0 : pokeList.length;\r\n    let url: string = `https://pokeapi.co/api/v2/pokemon?limit=${totalPokemonPerLoad}&offset=${pokemonOffset}`;\r\n    let listBasicPoke: PokeNameUrlModel[] = (await getBasicPoke(url)).data.results;\r\n    let additionalPokemons: PokeMainDataModel[] = await getPokeList(listBasicPoke);\r\n    additionalPokemons = additionalPokemons.slice(0, maxPokemon - pokeList.length);\r\n    firstLoad ? setPokeList(additionalPokemons) : setPokeList((p) => [...p, ...additionalPokemons]);\r\n    additionalPokemons.length + pokeList.length >= maxPokemon && setLoadButton(false);\r\n  };\r\n\r\n  const loadPokemonType = async (firstLoad: boolean): Promise<void> => {\r\n    let pokemonOffset: number = firstLoad ? 20 : pokeList.length + 20;\r\n    let typeUrl: string = `https://pokeapi.co/api/v2/type/${currType}`;\r\n    let listBasicPoke: TypeSpecificModel[] = (await getBasicType(typeUrl)).data.pokemon;\r\n    let additionalPokemons: PokeMainDataModel[] = await getTypePokeList(listBasicPoke);\r\n    additionalPokemons = additionalPokemons.filter((pokemon) => pokemon.data.id < 899);\r\n    // max amount of pokemon with this type vs. total showing\r\n    additionalPokemons.length <= pokemonOffset && setLoadButton(false);\r\n    additionalPokemons = additionalPokemons.slice(0, pokemonOffset);\r\n    setPokeList(additionalPokemons);\r\n  };\r\n\r\n  const loadMorePokemon = (firstLoad: boolean): void => {\r\n    trackPromise(currType === 'none' ? loadPokemon(firstLoad) : loadPokemonType(firstLoad));\r\n  };\r\n\r\n  return (\r\n    <Grid container justifyContent=\"center\">\r\n      {pokeList.map((pokemon, index) => {\r\n        return <PokeCard key={index} pokeMainData={pokemon} />;\r\n      })}\r\n      {loadButton && (\r\n        <Grid container style={{ width: '100%' }} justifyContent=\"center\">\r\n          <Button disabled={promiseInProgress} variant=\"contained\" onClick={() => loadMorePokemon(false)}>\r\n            Load More\r\n          </Button>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport { getApiEvolData } from '../../service/pokeService';\r\nimport { PokePic } from './../subcomponents/PokePic';\r\nimport { PokeEvolModel } from './../../model/pokeModels';\r\nimport { PokeSpeciesModel } from '../../model/pokeSpecies';\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\r\n\r\ntype Props = { pokeSpecies: PokeSpeciesModel };\r\n\r\nexport const PokeEvol: React.FC<Props> = ({ pokeSpecies }) => {\r\n  const [evolChain, setEvolChain] = useState<PokeEvolModel[]>();\r\n\r\n  useEffect(() => {\r\n    getEvolChain();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const getEvolChain = async (): Promise<void> => {\r\n    let evolData = await getApiEvolData(pokeSpecies.data.evolution_chain.url);\r\n    let tempEvolChain: PokeEvolModel[] = [];\r\n    evolData = evolData.data.chain;\r\n\r\n    tempEvolChain.push(Object.assign({}, evolData.species, evolData.evolution_details));\r\n    while (evolData.evolves_to[0] != null) {\r\n      evolData = evolData.evolves_to[0];\r\n      tempEvolChain.push(Object.assign({}, evolData.species, evolData.evolution_details[0]));\r\n    }\r\n    setEvolChain(tempEvolChain);\r\n  };\r\n\r\n  if (!evolChain) {\r\n    return <></>;\r\n  }\r\n\r\n  return (\r\n    <Grid container justifyContent=\"center\" style={{ height: '100%' }}>\r\n      {evolChain.map((pokeStag: any, index: number) => (\r\n        <React.Fragment key={index}>\r\n          <Grid item xs={2} style={{ padding: 0, height: '100%' }}>\r\n            <Grid container justifyContent=\"center\" alignContent=\"center\" style={{ height: '100%', width: '100%' }}>\r\n              <PokePic id={pokeStag.url.slice(-4).match(/[0-9]/g).join('')} />\r\n            </Grid>\r\n          </Grid>\r\n          {index < evolChain.length - 1 && (\r\n            <Grid item xs={1}>\r\n              <Grid container justifyContent=\"center\" alignContent=\"center\" style={{ height: '100%' }}>\r\n                <KeyboardArrowRightIcon />\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n        </React.Fragment>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { capFirstLetter } from '../../utility/utility';\r\nimport { Grid, Typography, LinearProgress } from '@material-ui/core';\r\nimport { PokeStatsModel } from '../../model/pokeModels';\r\n\r\ntype Props = { pokeStats: PokeStatsModel[] };\r\n\r\nexport const PokeStats: React.FC<Props> = ({ pokeStats }) => {\r\n  return (\r\n    <Grid container justifyContent=\"center\">\r\n      {pokeStats.map((stat: PokeStatsModel, index: number) => (\r\n        <Grid container key={index}>\r\n          <Grid>\r\n            <Typography style={{ color: 'black' }}>{stat.base_stat}</Typography>\r\n          </Grid>\r\n          <Grid style={{ marginLeft: '1rem' }}>\r\n            <Typography style={{ color: 'black' }}>{capFirstLetter(stat.stat.name)}</Typography>\r\n          </Grid>\r\n          <LinearProgress variant=\"determinate\" value={stat.base_stat / 1.5} style={{ width: '100%' }} />\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { getListTypeInfo } from './../../service/pokeService';\r\nimport { PokeType } from './../subcomponents/PokeType';\r\nimport { Star } from '@material-ui/icons';\r\nimport { PokeTypeModel } from './../../model/pokeModels';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\ntype Props = { pokeTypes: PokeTypeModel[] };\r\n\r\nexport const PokeWeakness: React.FC<Props> = ({ pokeTypes }) => {\r\n  const [weaknessList, setWeaknessList] = useState<PokeTypeModel[]>();\r\n  const [superWeaknessList, setSuperWeaknessList] = useState<PokeTypeModel[]>();\r\n\r\n  useEffect(() => {\r\n    getTypeInfo();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const getTypeInfo = async (): Promise<void> => {\r\n    let tempTypeInfo = await getListTypeInfo(pokeTypes);\r\n    let tempWeaknessList: string[] = [];\r\n    tempTypeInfo.forEach((type) => {\r\n      //add all weaknesses into an array\r\n      type.data.damage_relations.double_damage_from.forEach((innerType: any) => {\r\n        tempWeaknessList.push(innerType.name);\r\n      });\r\n    });\r\n    tempTypeInfo.forEach((type) => {\r\n      //some weaknesses are canceled out by another type's resistance\r\n      type.data.damage_relations.half_damage_from.forEach((innerType: any) => {\r\n        let index = tempWeaknessList.indexOf(innerType.name);\r\n        if (index > -1) {\r\n          tempWeaknessList.splice(index, 1);\r\n        }\r\n      });\r\n    });\r\n    //some weaknesses are stronger than others (when both types share that weakness)\r\n    let superWeaknessList: string[] = tempWeaknessList.filter((type, index) => tempWeaknessList.indexOf(type) !== index);\r\n    tempWeaknessList = tempWeaknessList.filter((type, index) => superWeaknessList.indexOf(type) === -1);\r\n\r\n    let objSuperWeakList: PokeTypeModel[] = superWeaknessList.map((itr) => ({ type: { name: itr } }));\r\n    let objWeaknessList: PokeTypeModel[] = tempWeaknessList.map((itr) => ({ type: { name: itr } }));\r\n    setWeaknessList(objWeaknessList);\r\n    setSuperWeaknessList(objSuperWeakList);\r\n  };\r\n\r\n  if (!weaknessList || !superWeaknessList) {\r\n    return <CircularProgress />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PokeType types={superWeaknessList}>\r\n        <Star />\r\n      </PokeType>\r\n      <PokeType types={weaknessList}></PokeType>\r\n    </>\r\n  );\r\n};\r\n","import * as React from 'react';\r\nimport { Box, Tab, Tabs, Grid, makeStyles } from '@material-ui/core';\r\nimport { PokeStats } from './PokeStats';\r\nimport { PokeWeakness } from './PokeWeakness';\r\nimport { matchColor } from '../../utility/utility';\r\nimport { PokeMainDataModel } from '../../model/pokeModels';\r\nimport { PokeMoves } from './PokeMoves';\r\n\r\nenum PokeTab {\r\n  Stats = 'Base Stats',\r\n  Moves = 'Moves',\r\n  Sprites = 'Sprites',\r\n  Weakness = 'Weak to',\r\n}\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  index: number;\r\n  value: number;\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  panel: {\r\n    // overflowY: 'scroll',\r\n    padding: '5px',\r\n    height: '180px',\r\n  },\r\n}));\r\n\r\ntype Props = { pokeData: PokeMainDataModel };\r\n\r\nfunction a11yProps(index: number) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nexport const PokeMenu: React.FC<Props> = ({ pokeData }) => {\r\n  const [value, setValue] = React.useState(0 as number);\r\n  const classes = useStyles();\r\n\r\n  function TabPanel(props: TabPanelProps) {\r\n    const { children, value, index, ...other } = props;\r\n    return (\r\n      <div role=\"tabpanel\" hidden={value !== index} id={`simple-tabpanel-${index}`} aria-labelledby={`simple-tab-${index}`} {...other}>\r\n        {value === index && (\r\n          <Grid container justifyContent=\"center\" alignContent=\"center\" className={classes.panel}>\r\n            {children}\r\n          </Grid>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number): void => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ width: '100' }} style={{ backgroundColor: 'white', borderStyle: 'solid', borderRadius: '10px', borderColor: 'grey' }}>\r\n      <Box sx={{ borderBottom: 1, borderColor: 'divider' }} bgcolor={matchColor(pokeData.data.types[0].type.name, '0.2')}>\r\n        <Tabs variant=\"fullWidth\" TabIndicatorProps={{ style: { backgroundColor: 'black' } }} value={value} onChange={handleChange} aria-label=\"poke menu\">\r\n          <Tab label={PokeTab.Stats} {...a11yProps(0)} />\r\n          <Tab label={PokeTab.Moves} {...a11yProps(1)} />\r\n          <Tab label={PokeTab.Sprites} {...a11yProps(2)} />\r\n          <Tab label={PokeTab.Weakness} {...a11yProps(3)} />\r\n        </Tabs>\r\n      </Box>\r\n      <TabPanel value={value} index={0}>\r\n        <PokeStats pokeStats={pokeData.data.stats} />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <PokeMoves pokeMoves={pokeData.data.moves} />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        <Grid container justifyContent=\"center\">\r\n          <Grid item xs={3}>\r\n            <img style={{ width: '100%' }} src={pokeData.data.sprites.front_default} alt=\"front_default\" />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <img style={{ width: '100%' }} src={pokeData.data.sprites.back_default} alt=\"back_default\" />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <img style={{ width: '100%' }} src={pokeData.data.sprites.front_shiny} alt=\"front_shiny\" />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <img style={{ width: '100%' }} src={pokeData.data.sprites.back_shiny} alt=\"back_shiny\" />\r\n          </Grid>\r\n        </Grid>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={3}>\r\n        <Grid container justifyContent=\"center\">\r\n          <PokeWeakness pokeTypes={pokeData.data.types} />\r\n        </Grid>\r\n      </TabPanel>\r\n    </Box>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Grid, Typography, makeStyles } from '@material-ui/core';\r\n\r\nimport { PokeMainDataModel } from '../../model/pokeModels';\r\nimport { PokeSpeciesModel } from '../../model/pokeSpecies';\r\n\r\nimport { getSinglePoke, getSinglePokeSpecies } from '../../service/pokeService';\r\nimport { getPokeScheme, capFirstLetter } from './../../utility/utility';\r\n\r\nimport { PokePic } from '../subcomponents/PokePic';\r\nimport { PokeEvol } from './PokeEvol';\r\nimport { PokeType } from '../subcomponents/PokeType';\r\nimport { PokeMenu } from './PokeMenu';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  picBackground: {\r\n    height: '25vh',\r\n    borderBottomLeftRadius: '5%',\r\n    borderBottomRightRadius: '5%',\r\n  },\r\n  content: {\r\n    width: '100%',\r\n    borderTopLeftRadius: '5%',\r\n    borderTopRightRadius: '5%',\r\n    opacity: '1',\r\n    backgroundColor: 'white',\r\n    padding: '10px',\r\n    alignContent: '',\r\n  },\r\n  evolution: {\r\n    height: '20vh',\r\n    width: '100%',\r\n    backgroundColor: 'white',\r\n  },\r\n}));\r\n\r\nexport const PokeDetails: React.FC = () => {\r\n  const [currUrl] = useState(window.location.href as string);\r\n  const [pokeData, setPokeData] = useState<PokeMainDataModel>();\r\n  const [pokeSpecies, setPokeSpecies] = useState<PokeSpeciesModel>();\r\n  let id: number = +currUrl.slice(-3).match(/[0-9]/g)!.join('');\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    getPokemon();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const getPokemon = async () => {\r\n    let url: string = `https://pokeapi.co/api/v2/pokemon/${id}`;\r\n    let data: PokeMainDataModel = await getSinglePoke(url);\r\n    setPokeData(data);\r\n    let speciesUrl: string = data.data.species.url;\r\n    let speciesData: PokeSpeciesModel = await getSinglePokeSpecies(speciesUrl);\r\n    setPokeSpecies(speciesData);\r\n  };\r\n\r\n  if (!pokeData || !pokeSpecies) {\r\n    return <></>;\r\n  }\r\n\r\n  return (\r\n    <Grid style={{ background: getPokeScheme(pokeData.data.types, '0.9') }}>\r\n      <Grid container justifyContent=\"center\" className={classes.picBackground}>\r\n        <PokePic id={id} />\r\n      </Grid>\r\n      <Grid justifyContent=\"center\" container className={classes.content}>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h5\" style={{ textAlign: 'center', fontWeight: 'bold' }}>\r\n            {capFirstLetter(pokeData.data.name)}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Grid container direction=\"row\" justifyContent=\"space-around\">\r\n            <PokeType types={pokeData.data.types} />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography style={{ textAlign: 'center' }}>\r\n            {pokeSpecies.data.flavor_text_entries.filter((entry) => entry.language.name === 'en')[0].flavor_text.replace('\\f', ' ')}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container justifyContent=\"center\" style={{ maxHeight: '100%', maxWidth: '100%' }}>\r\n            <PokeMenu pokeData={pokeData} />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container className={classes.evolution}>\r\n        <PokeEvol pokeSpecies={pokeSpecies} />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Grid, makeStyles } from '@material-ui/core';\r\nimport { matchColor } from '../utility/utility';\r\nimport { useAppContext } from '../AppContext';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  sizing: {\r\n    height: '100%',\r\n    minHeight: '100vh',\r\n    width: '100%',\r\n    position: 'absolute',\r\n    top: '0',\r\n    left: '0',\r\n    zIndex: -1,\r\n  },\r\n  background: {\r\n    backgroundImage:\r\n      'url(https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/f132df58-e3ee-411d-bbe3-f6f6ce8e746f/db70h46-e3c95a32-8918-4e2b-92b8-3a200e29b321.png?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOjdlMGQxODg5ODIyNjQzNzNhNWYwZDQxNWVhMGQyNmUwIiwiaXNzIjoidXJuOmFwcDo3ZTBkMTg4OTgyMjY0MzczYTVmMGQ0MTVlYTBkMjZlMCIsIm9iaiI6W1t7InBhdGgiOiJcL2ZcL2YxMzJkZjU4LWUzZWUtNDExZC1iYmUzLWY2ZjZjZThlNzQ2ZlwvZGI3MGg0Ni1lM2M5NWEzMi04OTE4LTRlMmItOTJiOC0zYTIwMGUyOWIzMjEucG5nIn1dXSwiYXVkIjpbInVybjpzZXJ2aWNlOmZpbGUuZG93bmxvYWQiXX0.PtJ-CiQfe5JoPXbhaJslDtn8_64xeZX7NW86LKybo2Q)',\r\n    backgroundRepeat: 'repeat',\r\n  },\r\n}));\r\n\r\nexport const Background: React.FC = () => {\r\n  const { currType } = useAppContext();\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid\r\n      className={classes.sizing}\r\n      style={{\r\n        backgroundColor: matchColor(currType, '0.35'),\r\n      }}\r\n    >\r\n      <Grid className={`${classes.sizing} ${classes.background}`} />\r\n    </Grid>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useAppContext } from '../../AppContext';\r\nimport { Grid, Button, makeStyles, Box, Grow } from '@material-ui/core';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { PokeType } from '../subcomponents/PokeType';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  reset: {\r\n    color: 'white',\r\n    backgroundColor: 'red',\r\n  },\r\n  return: {\r\n    color: 'white',\r\n    backgroundColor: 'grey',\r\n    margin: '0 1rem',\r\n  },\r\n}));\r\n\r\nconst types = [\r\n  'fire',\r\n  'grass',\r\n  'bug',\r\n  'dark',\r\n  'dragon',\r\n  'electric',\r\n  'fairy',\r\n  'fighting',\r\n  'flying',\r\n  'ghost',\r\n  'ground',\r\n  'ice',\r\n  'normal',\r\n  'poison',\r\n  'psychic',\r\n  'rock',\r\n  'steel',\r\n  'water',\r\n];\r\n\r\nexport const TopBar: React.FC = () => {\r\n  const { setCurrType, currType } = useAppContext();\r\n  const [toggleMenu, setToggleMenu] = useState(false);\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const onReset = () => {\r\n    setCurrType('none');\r\n  };\r\n\r\n  const onReturn = () => {\r\n    history.push({\r\n      pathname: `/tsPokedex`,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Grid container justifyContent=\"space-between\">\r\n      <Button onClick={() => setToggleMenu(!toggleMenu)} style={{ marginLeft: '2rem' }}>\r\n        {!toggleMenu && <MenuIcon style={{ color: 'white' }} />}\r\n        {toggleMenu && <CloseIcon style={{ color: 'white' }} />}\r\n      </Button>\r\n      {toggleMenu && (\r\n        <Grid container onClick={() => setToggleMenu(false)} style={{ position: 'absolute', display: 'flex', left: '2rem', top: '4rem' }}>\r\n          <Box\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n            }}\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              backgroundColor: 'rgb(0,0,0,0.7)',\r\n              padding: '1rem',\r\n              borderRadius: '5px',\r\n              boxShadow: '0px 0px 5px rgba(0,0, 0,0.2)',\r\n            }}\r\n          >\r\n            <PokeType types={types} />\r\n          </Box>\r\n        </Grid>\r\n      )}\r\n      <Box>\r\n        <Grow in={currType !== 'none'}>\r\n          <Button onClick={() => onReset()} className={classes.reset}>\r\n            Reset\r\n          </Button>\r\n        </Grow>\r\n        <Grow in={useLocation().pathname !== '/tsPokedex'}>\r\n          <Button onClick={() => onReturn()} className={classes.return}>\r\n            Return\r\n          </Button>\r\n        </Grow>\r\n      </Box>\r\n    </Grid>\r\n  );\r\n};\r\n","import './App.css';\nimport { PokeContainer } from './components/PokeContainer';\nimport { PokeDetails } from './components/PokeDetails/PokeDetails';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { AppContextProvider } from './AppContext';\nimport { Container, Grid, makeStyles, AppBar, Toolbar } from '@material-ui/core';\nimport { Background } from './components/Background';\nimport { TopBar } from './components/TopBar/TopBar';\n\nconst useStyles = makeStyles(() => ({\n  container: {\n    backgroundColor: 'rgb(0,0,0,0.8)',\n    padding: '15px',\n    borderEndEndRadius: '10px',\n    borderEndStartRadius: '10px',\n  },\n  appbar: {\n    minWidth: '100%',\n    height: '5vh',\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  var myRange: number[] = [];\n  for (var i = 1; i <= 898; i++) {\n    myRange.push(i);\n  }\n  return (\n    <div className=\"App\" style={{ height: '100%' }}>\n      <AppContextProvider>\n        <Router>\n          <AppBar position=\"sticky\">\n            <Toolbar style={{ padding: '0' }}>\n              <TopBar />\n            </Toolbar>\n          </AppBar>\n          <Grid style={{ position: 'relative' }}>\n            <Container className={classes.container} maxWidth=\"md\" style={{ backgroundColor: 'rgb(0,0,0,0.7)', height: '100%' }}>\n              <Route path={'/tsPokedex'} exact component={PokeContainer} />\n              {myRange.map((id) => (\n                <Route path={`/Pokemon/Details/${id}`} key={id} component={PokeDetails} />\n              ))}\n            </Container>\n            <Background />\n          </Grid>\n        </Router>\n      </AppContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}